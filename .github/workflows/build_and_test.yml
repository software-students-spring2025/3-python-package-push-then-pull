name: Run All Tests
on:
  push:
    branches: [create_workflows]


jobs:
  manual_test_and_build:
    name: Run all unit tests and build the package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - id: setup-python
        name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pipenv'

      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
        shell: bash

      - name: Regen pipfile.lock
        run: pipenv lock
        shell: bash

      - name: Sync Pipfile
        run: pipenv sync --dev --python 3.11
        shell: bash
        working-directory: ${{ github.workspace }}
      
      - name: Turn on 'editable' mode, install dependencies
        run: |
          pipenv install -e .
      - name: Check venv information
        run: |
          pipenv --venv
      - name: Run unit tests
        run: |
          pipenv run python -m pytest
      
  test_and_build:
    needs: [manual_test_and_build]
    name: Run all unit tests and build the package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Install Python, pipenv and Pipfile packages
        uses: kojoru/prepare-pipenv@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Regenerate Pipfile.lock
        run: |
          pipenv lock
      - name: Turn on 'editable' mode, install dependencies
        run: |
          pipenv install -e .
      - name: Check venv information
        run: |
          pipenv --venv
      - name: Run unit tests
        run: |
          pipenv run -v python -m pytest

  build_and_upload:
    needs: [test_and_build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Pass
        run: |
          echo "hello world"
          
    